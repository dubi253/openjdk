#Test Results (version 2)
#Thu Feb 29 03:40:24 UTC 2024
#-----testdescription-----
$file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java
$root=/Users/runner/work/openjdk/openjdk/test/jdk
author=Mike Duigou
keywords=bug8010122 bug8004518 bug8024331 bug8024688 testng
run=USER_SPECIFIED testng Defaults\n
source=Defaults.java
title=Test Map default methods

#-----environment-----

#-----testresult-----
description=file\:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java
elapsed=5326 0\:00\:05.326
end=Thu Feb 29 03\:40\:24 UTC 2024
environment=regtest
execStatus=Passed. Execution successful
harnessLoaderMode=Classpath Loader
harnessVariety=Full Bundle
hostname=192.168.64.24
javatestOS=Mac OS X 14.3.1 (aarch64)
javatestVersion=6.0-ea+b24-2024-02-28-${BUILT_FROM_COMMIT}
jtregVersion=jtreg 7.3.1 dev 0
script=com.sun.javatest.regtest.exec.RegressionScript
sections=script_messages build compile testng
start=Thu Feb 29 03\:40\:19 UTC 2024
test=java/util/Map/Defaults.java
testJDK=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
testJDK_OS=[name\:Mac OS X,arch\:aarch64,version\:14.3.1,family\:mac,simple_arch\:aarch64,simple_version\:14.3,processors\:3,maxMemory\:7516192768,maxSwap\:0]
testJDK_os.arch=aarch64
testJDK_os.name=Mac OS X
testJDK_os.version=14.3.1
totalTime=5326
user.name=runner
work=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/java/util/Map

#section:script_messages
----------messages:(4/341)----------
JDK under test: /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home
openjdk version "23-internal" 2024-09-17
OpenJDK Runtime Environment (build 23-internal-dubi253-8d0cb4767400ce800d7d94c32d914bb6a3d3f4c5)
OpenJDK 64-Bit Server VM (build 23-internal-dubi253-8d0cb4767400ce800d7d94c32d914bb6a3d3f4c5, mixed mode, sharing)

#section:build
----------messages:(7/206)----------
command: build Defaults
reason: Named class compiled on demand
started: Thu Feb 29 03:40:24 UTC 2024
Test directory:
  compile: Defaults
finished: Thu Feb 29 03:40:24 UTC 2024
elapsed time (seconds): 0.112
result: Passed. Build successful

#section:compile
----------messages:(7/272)----------
command: compile /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java
reason: .class file out of date or does not exist
started: Thu Feb 29 03:40:24 UTC 2024
Mode: agentvm
Agent id: 1
finished: Thu Feb 29 03:40:24 UTC 2024
elapsed time (seconds): 0.112
----------configuration:(13/951)----------
Boot Layer (javac runtime environment)
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

javac compilation environment
  source path: /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map
  class path:  /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map
               /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Map/Defaults.d
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar
               /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar

----------rerun:(33/3399)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/1 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/javac \\
        -J-Xmx768m \\
        -J-XX:MaxRAMPercentage=12.5 \\
        -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk \\
        -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp \\
        -J-ea \\
        -J-esa \\
        -J-Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -J-Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -J-Dtest.compiler.opts= \\
        -J-Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -J-Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -J-Dtest.timeout.factor=4.0 \\
        -J-Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -J-Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -J-Dtest.name=java/util/Map/Defaults.java \\
        -J-Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java \\
        -J-Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map \\
        -J-Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map \\
        -J-Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Map/Defaults.d \\
        -J-Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Map/Defaults.d \\
        -J-Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Map/Defaults.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map \\
        -d /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Map/Defaults.d \\
        -sourcepath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map \\
        -classpath /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map:/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Map/Defaults.d:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java
----------direct:(12/1026)----------
/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java:624: warning: [removal] Long(long) in Long has been deprecated and marked for removal
        assertEquals(Long.valueOf(0L), map.compute(new Long(3L), fun));
                                                   ^
/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java:625: warning: [removal] Long(long) in Long has been deprecated and marked for removal
        assertEquals(Long.valueOf(3L), map.compute(new Long(3L), fun));
                                                   ^
/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java:626: warning: [removal] Long(long) in Long has been deprecated and marked for removal
        assertEquals(Long.valueOf(6L), map.compute(new Long(3L), fun));
                                                   ^
Note: /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
3 warnings
result: Passed. Compilation successful

#section:testng
----------messages:(7/210)----------
command: testng Defaults
reason: User specified action: run testng Defaults 
started: Thu Feb 29 03:40:24 UTC 2024
Mode: agentvm
Agent id: 6
finished: Thu Feb 29 03:40:24 UTC 2024
elapsed time (seconds): 0.202
----------configuration:(13/943)----------
Boot Layer
  class path: /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/junit-platform-console-standalone-1.9.2.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar 
              /Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar 
  patch:      java.base /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/patches/java.base

Test Layer
  class path: /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Map/Defaults.d
              /Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map

----------rerun:(26/2973)*----------
cd /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/scratch/1 && \\
HOME=/Users/runner \\
LANG=en_US.UTF-8 \\
LC_ALL=C \\
LC_CTYPE=en_US.UTF-8 \\
PATH=/bin:/usr/bin:/usr/sbin \\
TEST_IMAGE_DIR=/Users/runner/work/openjdk/openjdk/bundles/tests \\
    /Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home/bin/java \\
        -Dtest.vm.opts='-Xmx768m -XX:MaxRAMPercentage=12.5 -Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -ea -esa' \\
        -Dtest.tool.vm.opts='-J-Xmx768m -J-XX:MaxRAMPercentage=12.5 -J-Dtest.boot.jdk=/Users/runner/work/openjdk/openjdk/bootjdk/jdk -J-Djava.io.tmpdir=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/tmp -J-ea -J-esa' \\
        -Dtest.compiler.opts= \\
        -Dtest.java.opts=-XX:-CreateCoredumpOnCrash \\
        -Dtest.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dcompile.jdk=/Users/runner/work/openjdk/openjdk/bundles/jdk/jdk-23.jdk/Contents/Home \\
        -Dtest.timeout.factor=4.0 \\
        -Dtest.nativepath=/Users/runner/work/openjdk/openjdk/bundles/tests/jdk/jtreg/native \\
        -Dtest.root=/Users/runner/work/openjdk/openjdk/test/jdk \\
        -Dtest.name=java/util/Map/Defaults.java \\
        -Dtest.file=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map/Defaults.java \\
        -Dtest.src=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map \\
        -Dtest.src.path=/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map \\
        -Dtest.classes=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Map/Defaults.d \\
        -Dtest.class.path=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Map/Defaults.d \\
        -Dtest.class.path.prefix=/Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Map/Defaults.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map \\
        -classpath /Users/runner/work/openjdk/openjdk/build/run-test-prebuilt/test-support/jtreg_test_jdk_jdk_collections_core/classes/1/java/util/Map/Defaults.d:/Users/runner/work/openjdk/openjdk/test/jdk/java/util/Map:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/testng-7.3.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/guice-5.1.0.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jcommander-1.82.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/javatest.jar:/Users/runner/work/openjdk/openjdk/jtreg/installed/lib/jtreg.jar \\
        com.sun.javatest.regtest.agent.TestNGRunner java/util/Map/Defaults.java false Defaults
----------System.out:(518/56906)----------
test Defaults.testCompute("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@590b74d8): success
test Defaults.testCompute("Hashtable", java.util.Hashtable@397029b2): success
test Defaults.testCompute("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@6450677d): success
test Defaults.testCompute("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@3e4c323f): success
test Defaults.testCompute("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@3b1df57): success
test Defaults.testCompute("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@5dbdabdd): success
test Defaults.testCompute("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@77fc44ba): success
test Defaults.testCompute("HashMap", java.util.HashMap@c25edd3): success
test Defaults.testCompute("IdentityHashMap", java.util.IdentityHashMap@51c3dff5): success
test Defaults.testCompute("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@689d9b2b): success
test Defaults.testCompute("WeakHashMap", java.util.WeakHashMap@31dcc331): success
test Defaults.testCompute("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@21ce05b5): success
test Defaults.testCompute("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@4b53b90b): success
test Defaults.testCompute("IdentityHashMap", java.util.IdentityHashMap@219e2d7f): success
test Defaults.testCompute("LinkedHashMap", java.util.LinkedHashMap@399ffd22): success
test Defaults.testCompute("WeakHashMap", java.util.WeakHashMap@7a4bb0bf): success
test Defaults.testCompute("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@47832da7): success
test Defaults.testCompute("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@3e70310e): success
test Defaults.testCompute("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@7c5d9e37): success
test Defaults.testCompute("EnumMap", java.util.EnumMap@17f1e6cb): success
test Defaults.testCompute("TreeMap", java.util.TreeMap@4ee7a786): success
test Defaults.testCompute("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@4cc065f4): success
test Defaults.testCompute("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@38869682): success
test Defaults.testCompute("LinkedHashMap", java.util.LinkedHashMap@7abd4535): success
test Defaults.testCompute("HashMap", java.util.HashMap@6cd38707): success
test Defaults.testComputeIfAbsent("Hashtable", java.util.Hashtable@74141d18): success
test Defaults.testComputeIfAbsent("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@6cc1c958): success
test Defaults.testComputeIfAbsent("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@69196cf8): success
test Defaults.testComputeIfAbsent("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@6fd22ad0): success
test Defaults.testComputeIfAbsent("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@5e8a4d4f): success
test Defaults.testComputeIfAbsent("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@532138): success
test Defaults.testComputeIfAbsent("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@639ae5ea): success
test Defaults.testComputeIfAbsent("HashMap", java.util.HashMap@11ffdd2b): success
test Defaults.testComputeIfAbsent("IdentityHashMap", java.util.IdentityHashMap@66bdab4d): success
test Defaults.testComputeIfAbsent("LinkedHashMap", java.util.LinkedHashMap@28dabc3): success
test Defaults.testComputeIfAbsent("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@c49fc00): success
test Defaults.testComputeIfAbsent("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@49ba53c1): success
test Defaults.testComputeIfAbsent("HashMap", java.util.HashMap@174dd413): success
test Defaults.testComputeIfAbsent("IdentityHashMap", java.util.IdentityHashMap@2e364ac): success
test Defaults.testComputeIfAbsent("LinkedHashMap", java.util.LinkedHashMap@13e367c9): success
test Defaults.testComputeIfAbsent("WeakHashMap", java.util.WeakHashMap@735956b0): success
test Defaults.testComputeIfAbsent("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@2f719c1a): success
test Defaults.testComputeIfAbsent("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@4836382f): success
test Defaults.testComputeIfAbsent("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@6f74bbd5): success
test Defaults.testComputeIfAbsent("EnumMap", java.util.EnumMap@7f13a5c6): success
test Defaults.testComputeIfAbsent("TreeMap", java.util.TreeMap@4a329a44): success
test Defaults.testComputeIfAbsent("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@460de3f3): success
test Defaults.testComputeIfAbsent("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@96c865d): success
test Defaults.testComputeIfAbsent("WeakHashMap", java.util.WeakHashMap@2780a176): success
test Defaults.testComputeIfAbsent("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@43b0a1f8): success
test Defaults.testComputeIfAbsentNullFunction("Hashtable", java.util.Hashtable@52e93269): success
test Defaults.testComputeIfAbsentNullFunction("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@58af7a6b): success
test Defaults.testComputeIfAbsentNullFunction("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@6278506f): success
test Defaults.testComputeIfAbsentNullFunction("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@8a71c78): success
test Defaults.testComputeIfAbsentNullFunction("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@2f3f2f9e): success
test Defaults.testComputeIfAbsentNullFunction("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@46bfb05f): success
test Defaults.testComputeIfAbsentNullFunction("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@4d119af1): success
test Defaults.testComputeIfAbsentNullFunction("HashMap", java.util.HashMap@4ded1504): success
test Defaults.testComputeIfAbsentNullFunction("IdentityHashMap", java.util.IdentityHashMap@30544c0a): success
test Defaults.testComputeIfAbsentNullFunction("LinkedHashMap", java.util.LinkedHashMap@32bf47b8): success
test Defaults.testComputeIfAbsentNullFunction("WeakHashMap", java.util.WeakHashMap@73824d83): success
test Defaults.testComputeIfAbsentNullFunction("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@423b5b53): success
test Defaults.testComputeIfAbsentNullFunction("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@13adb2cc): success
test Defaults.testComputeIfAbsentNullFunction("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@b5c47b0): success
test Defaults.testComputeIfAbsentNullFunction("HashMap", java.util.HashMap@17e3cdd8): success
test Defaults.testComputeIfAbsentNullFunction("IdentityHashMap", java.util.IdentityHashMap@464cb4b8): success
test Defaults.testComputeIfAbsentNullFunction("LinkedHashMap", java.util.LinkedHashMap@17f9ef20): success
test Defaults.testComputeIfAbsentNullFunction("WeakHashMap", java.util.WeakHashMap@3bc1a19a): success
test Defaults.testComputeIfAbsentNullFunction("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@167070ee): success
test Defaults.testComputeIfAbsentNullFunction("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@61bb3273): success
test Defaults.testComputeIfAbsentNullFunction("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@7a48ed0d): success
test Defaults.testComputeIfAbsentNullFunction("EnumMap", java.util.EnumMap@11e802c6): success
test Defaults.testComputeIfAbsentNullFunction("TreeMap", java.util.TreeMap@1358950a): success
test Defaults.testComputeIfAbsentNullFunction("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@2f4b906c): success
test Defaults.testComputeIfAbsentNullFunction("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@7f04afe1): success
test Defaults.testComputeIfAbsentNulls("HashMap", java.util.HashMap@7f10142f): success
test Defaults.testComputeIfAbsentNulls("IdentityHashMap", java.util.IdentityHashMap@71f60e48): success
test Defaults.testComputeIfAbsentNulls("LinkedHashMap", java.util.LinkedHashMap@4c0d8277): success
test Defaults.testComputeIfAbsentNulls("WeakHashMap", java.util.WeakHashMap@414a4d52): success
test Defaults.testComputeIfAbsentNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@215c2d57): success
test Defaults.testComputeIfAbsentNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@4512317c): success
test Defaults.testComputeIfAbsentNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@2eca78fe): success
test Defaults.testComputeIfPresent("Hashtable", java.util.Hashtable@5297457d): success
test Defaults.testComputeIfPresent("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@6803e086): success
test Defaults.testComputeIfPresent("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@27794afb): success
test Defaults.testComputeIfPresent("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@64daa917): success
test Defaults.testComputeIfPresent("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@1eaf1ab6): success
test Defaults.testComputeIfPresent("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@483e5651): success
test Defaults.testComputeIfPresent("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@1d08a6e4): success
test Defaults.testComputeIfPresent("HashMap", java.util.HashMap@1ccc4720): success
test Defaults.testComputeIfPresent("IdentityHashMap", java.util.IdentityHashMap@3a3cf9e7): success
test Defaults.testComputeIfPresent("LinkedHashMap", java.util.LinkedHashMap@5a3b656d): success
test Defaults.testComputeIfPresent("WeakHashMap", java.util.WeakHashMap@1b066f56): success
test Defaults.testComputeIfPresent("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@2a57153d): success
test Defaults.testComputeIfPresent("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@7b299019): success
test Defaults.testComputeIfPresent("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@72711aaf): success
test Defaults.testComputeIfPresent("HashMap", java.util.HashMap@638ff7b4): success
test Defaults.testComputeIfPresent("IdentityHashMap", java.util.IdentityHashMap@7f670f81): success
test Defaults.testComputeIfPresent("WeakHashMap", java.util.WeakHashMap@d079bc2): success
test Defaults.testComputeIfPresent("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@4d1b5ffc): success
test Defaults.testComputeIfPresent("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@4108af0d): success
test Defaults.testComputeIfPresent("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@661d76a2): success
test Defaults.testComputeIfPresent("EnumMap", java.util.EnumMap@15e406f2): success
test Defaults.testComputeIfPresent("TreeMap", java.util.TreeMap@18b17ba7): success
test Defaults.testComputeIfPresent("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@394b4729): success
test Defaults.testComputeIfPresent("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@1a2eeb20): success
test Defaults.testComputeIfPresent("LinkedHashMap", java.util.LinkedHashMap@32b8ba32): success
test Defaults.testComputeIfPresentNullFunction("Hashtable", java.util.Hashtable@7a52b91): success
test Defaults.testComputeIfPresentNullFunction("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@3dd31257): success
test Defaults.testComputeIfPresentNullFunction("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@6c750ccb): success
test Defaults.testComputeIfPresentNullFunction("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@31250f86): success
test Defaults.testComputeIfPresentNullFunction("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@1db60c45): success
test Defaults.testComputeIfPresentNullFunction("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@69ae293c): success
test Defaults.testComputeIfPresentNullFunction("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@508951d2): success
test Defaults.testComputeIfPresentNullFunction("HashMap", java.util.HashMap@3ae1ba44): success
test Defaults.testComputeIfPresentNullFunction("IdentityHashMap", java.util.IdentityHashMap@df4a128): success
test Defaults.testComputeIfPresentNullFunction("WeakHashMap", java.util.WeakHashMap@4cc9ab13): success
test Defaults.testComputeIfPresentNullFunction("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@7dcf4171): success
test Defaults.testComputeIfPresentNullFunction("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@2ce6545c): success
test Defaults.testComputeIfPresentNullFunction("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@2c006414): success
test Defaults.testComputeIfPresentNullFunction("HashMap", java.util.HashMap@28a88c13): success
test Defaults.testComputeIfPresentNullFunction("IdentityHashMap", java.util.IdentityHashMap@37320749): success
test Defaults.testComputeIfPresentNullFunction("LinkedHashMap", java.util.LinkedHashMap@7e903e19): success
test Defaults.testComputeIfPresentNullFunction("WeakHashMap", java.util.WeakHashMap@2ef14ee8): success
test Defaults.testComputeIfPresentNullFunction("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@646d58df): success
test Defaults.testComputeIfPresentNullFunction("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@392ef760): success
test Defaults.testComputeIfPresentNullFunction("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@3a1ec8ce): success
test Defaults.testComputeIfPresentNullFunction("EnumMap", java.util.EnumMap@a568cf8): success
test Defaults.testComputeIfPresentNullFunction("TreeMap", java.util.TreeMap@2c3a9602): success
test Defaults.testComputeIfPresentNullFunction("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@3924422c): success
test Defaults.testComputeIfPresentNullFunction("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@52b84356): success
test Defaults.testComputeIfPresentNullFunction("LinkedHashMap", java.util.LinkedHashMap@4a5370f9): success
test Defaults.testComputeIfPresentNulls("IdentityHashMap", java.util.IdentityHashMap@4706f67b): success
test Defaults.testComputeIfPresentNulls("LinkedHashMap", java.util.LinkedHashMap@97c01d6): success
test Defaults.testComputeIfPresentNulls("HashMap", java.util.HashMap@4f65d270): success
test Defaults.testComputeIfPresentNulls("WeakHashMap", java.util.WeakHashMap@48ac2c3a): success
test Defaults.testComputeIfPresentNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@1c93fbfa): success
test Defaults.testComputeIfPresentNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@6a5e0950): success
test Defaults.testComputeIfPresentNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@5d0c1502): success
test Defaults.testComputeNullFunction("Hashtable", java.util.Hashtable@4adfa9d3): success
test Defaults.testComputeNullFunction("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@3d1c3b68): success
test Defaults.testComputeNullFunction("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@907841): success
test Defaults.testComputeNullFunction("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@5e4f33cb): success
test Defaults.testComputeNullFunction("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@45d5f737): success
test Defaults.testComputeNullFunction("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@50fa361): success
test Defaults.testComputeNullFunction("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@3a1c17a9): success
test Defaults.testComputeNullFunction("HashMap", java.util.HashMap@b6f31f6): success
test Defaults.testComputeNullFunction("IdentityHashMap", java.util.IdentityHashMap@32903c43): success
test Defaults.testComputeNullFunction("LinkedHashMap", java.util.LinkedHashMap@40eef744): success
test Defaults.testComputeNullFunction("WeakHashMap", java.util.WeakHashMap@1d3fd7f): success
test Defaults.testComputeNullFunction("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@3018d850): success
test Defaults.testComputeNullFunction("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@61fc0230): success
test Defaults.testComputeNullFunction("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@4a2f8210): success
test Defaults.testComputeNullFunction("HashMap", java.util.HashMap@65b21f75): success
test Defaults.testComputeNullFunction("IdentityHashMap", java.util.IdentityHashMap@7720debb): success
test Defaults.testComputeNullFunction("LinkedHashMap", java.util.LinkedHashMap@15b7924c): success
test Defaults.testComputeNullFunction("WeakHashMap", java.util.WeakHashMap@6ae83ea9): success
test Defaults.testComputeNullFunction("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@78507976): success
test Defaults.testComputeNullFunction("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@2f25245a): success
test Defaults.testComputeNullFunction("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@600a2733): success
test Defaults.testComputeNullFunction("EnumMap", java.util.EnumMap@787e5b23): success
test Defaults.testComputeNullFunction("TreeMap", java.util.TreeMap@1e9fdb2): success
test Defaults.testComputeNullFunction("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@8827bcf): success
test Defaults.testComputeNullFunction("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@2d71a2ab): success
test Defaults.testComputeNulls("IdentityHashMap", java.util.IdentityHashMap@51901577): success
test Defaults.testComputeNulls("HashMap", java.util.HashMap@7b38e0ef): success
test Defaults.testComputeNulls("LinkedHashMap", java.util.LinkedHashMap@607f04d1): success
test Defaults.testComputeNulls("WeakHashMap", java.util.WeakHashMap@2d7e12ed): success
test Defaults.testComputeNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@20312c58): success
test Defaults.testComputeNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@75fcc8d3): success
test Defaults.testComputeNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@2c8eadd5): success
test Defaults.testConcurrentMap_computeIfAbsent_racy(): success
test Defaults.testConcurrentMap_computeIfPresent_racy(): success
test Defaults.testConcurrentMap_compute_racy(): success
test Defaults.testConcurrentMap_compute_simple(): success
test Defaults.testConcurrentMap_merge_racy(): success
test Defaults.testForEach("Collections.unmodifiableMap(HashMap)", java.util.Collections$UnmodifiableMap@1571cb55): success
test Defaults.testForEach("Collections.unmodifiableMap(HashMap)", java.util.Collections$UnmodifiableMap@b3706f8): success
test Defaults.testForEach("Hashtable", java.util.Hashtable@18122e1): success
test Defaults.testForEach("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@168efa4c): success
test Defaults.testForEach("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@5418cf09): success
test Defaults.testForEach("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@52df17bf): success
test Defaults.testForEach("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@4ac8a6b2): success
test Defaults.testForEach("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@3afbd591): success
test Defaults.testForEach("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@997d13c): success
test Defaults.testForEach("IdentityHashMap", java.util.IdentityHashMap@48aadb07): success
test Defaults.testForEach("LinkedHashMap", java.util.LinkedHashMap@7928d666): success
test Defaults.testForEach("HashMap", java.util.HashMap@760d4781): success
test Defaults.testForEach("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@37304dba): success
test Defaults.testForEach("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@2294d3c): success
test Defaults.testForEach("HashMap", java.util.HashMap@7ad947ab): success
test Defaults.testForEach("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@6cdbdc0): success
test Defaults.testForEach("IdentityHashMap", java.util.IdentityHashMap@78d4434a): success
test Defaults.testForEach("LinkedHashMap", java.util.LinkedHashMap@571fb2f5): success
test Defaults.testForEach("WeakHashMap", java.util.WeakHashMap@61ddcaf6): success
test Defaults.testForEach("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@20291d85): success
test Defaults.testForEach("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@6e06bffe): success
test Defaults.testForEach("EnumMap", java.util.EnumMap@79493dbb): success
test Defaults.testForEach("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@53518943): success
test Defaults.testForEach("TreeMap", java.util.TreeMap@5ffe091): success
test Defaults.testForEach("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@7c0eeeb3): success
test Defaults.testForEach("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@25a8c30a): success
test Defaults.testForEach("WeakHashMap", java.util.WeakHashMap@28852448): success
test Defaults.testGetOrDefault("Collections.unmodifiableMap(HashMap)", java.util.Collections$UnmodifiableMap@7ce97e58): success
test Defaults.testGetOrDefault("Collections.unmodifiableMap(HashMap)", java.util.Collections$UnmodifiableMap@15f8a952): success
test Defaults.testGetOrDefault("Hashtable", java.util.Hashtable@1a6bf9c): success
test Defaults.testGetOrDefault("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@6ec38dcd): success
test Defaults.testGetOrDefault("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@1b8411de): success
test Defaults.testGetOrDefault("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@1498b1bc): success
test Defaults.testGetOrDefault("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@34601da5): success
test Defaults.testGetOrDefault("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@75a1ac37): success
test Defaults.testGetOrDefault("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@5e031fc0): success
test Defaults.testGetOrDefault("IdentityHashMap", java.util.IdentityHashMap@3dd47463): success
test Defaults.testGetOrDefault("LinkedHashMap", java.util.LinkedHashMap@ca3ead5): success
test Defaults.testGetOrDefault("WeakHashMap", java.util.WeakHashMap@54c5a369): success
test Defaults.testGetOrDefault("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@5dfb8b2c): success
test Defaults.testGetOrDefault("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@65db5504): success
test Defaults.testGetOrDefault("HashMap", java.util.HashMap@34ea5c26): success
test Defaults.testGetOrDefault("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@f112180): success
test Defaults.testGetOrDefault("IdentityHashMap", java.util.IdentityHashMap@702222e7): success
test Defaults.testGetOrDefault("LinkedHashMap", java.util.LinkedHashMap@59b53276): success
test Defaults.testGetOrDefault("WeakHashMap", java.util.WeakHashMap@30a48475): success
test Defaults.testGetOrDefault("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@7fd59c1c): success
test Defaults.testGetOrDefault("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@6fcb5cc1): success
test Defaults.testGetOrDefault("EnumMap", java.util.EnumMap@62472b04): success
test Defaults.testGetOrDefault("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@647b5edc): success
test Defaults.testGetOrDefault("TreeMap", java.util.TreeMap@22a24ecb): success
test Defaults.testGetOrDefault("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@3ba3ab30): success
test Defaults.testGetOrDefault("HashMap", java.util.HashMap@5d3687fb): success
test Defaults.testGetOrDefault("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@2b14d6ab): success
test Defaults.testGetOrDefaultNulls("Collections.unmodifiableMap(HashMap)", java.util.Collections$UnmodifiableMap@5262c538): success
test Defaults.testGetOrDefaultNulls("HashMap", java.util.HashMap@6f757ba2): success
test Defaults.testGetOrDefaultNulls("IdentityHashMap", java.util.IdentityHashMap@40d63799): success
test Defaults.testGetOrDefaultNulls("LinkedHashMap", java.util.LinkedHashMap@582c4370): success
test Defaults.testGetOrDefaultNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@877b9f7): success
test Defaults.testGetOrDefaultNulls("WeakHashMap", java.util.WeakHashMap@3293068c): success
test Defaults.testGetOrDefaultNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@2aeec23): success
test Defaults.testGetOrDefaultNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@11981049): success
test Defaults.testMerge("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@3367031b, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@3bcbb185, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@3817ae0c, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Hashtable", java.util.Hashtable@2da424fa, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@4f034af9, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@2f7f3e07, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@4eb516c3, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("HashMap", java.util.HashMap@2b79cccd, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("IdentityHashMap", java.util.IdentityHashMap@7a1de502, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("WeakHashMap", java.util.WeakHashMap@3b20ef39, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("LinkedHashMap", java.util.LinkedHashMap@2df0ada7, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@495794f3, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@6ccda79c, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("HashMap", java.util.HashMap@314fa6ee, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("IdentityHashMap", java.util.IdentityHashMap@5deb69f2, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("WeakHashMap", java.util.WeakHashMap@ce258d3, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@ce307d0, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@8aca098, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@7af6bbbe, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("EnumMap", java.util.EnumMap@1cf8a40c, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("TreeMap", java.util.TreeMap@4b46c0fd, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@55bdd233, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@ad113e0, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@5b0f1076, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Hashtable", java.util.Hashtable@bf002d8, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@48895045, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@4824b1c8, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@5f412fc8, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@965f6a3, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("IdentityHashMap", java.util.IdentityHashMap@58385143, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("LinkedHashMap", java.util.LinkedHashMap@4c176790, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("WeakHashMap", java.util.WeakHashMap@5c76edda, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@4b8f34f4, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@16e46f8d, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@776dbb2, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("HashMap", java.util.HashMap@1c434a6e, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("IdentityHashMap", java.util.IdentityHashMap@7525e01a, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("LinkedHashMap", java.util.LinkedHashMap@4d8bdbb5, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("WeakHashMap", java.util.WeakHashMap@128e74d3, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@3e4417a6, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@4b46aa71, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("EnumMap", java.util.EnumMap@2d1e3834, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@49c5e29f, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("TreeMap", java.util.TreeMap@ffb1b57, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("LinkedHashMap", java.util.LinkedHashMap@586c5c8a, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@7e0e5639, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Hashtable", java.util.Hashtable@e3e40c2, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@76aab3c8, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@3f7a0fa4, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@448572b6, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@6e11bf8d, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@64d63684, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("IdentityHashMap", java.util.IdentityHashMap@3c47beed, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("LinkedHashMap", java.util.LinkedHashMap@2904142c, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("WeakHashMap", java.util.WeakHashMap@382af96c, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@562bd1d6, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@5c185548, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@338e3a1d, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("HashMap", java.util.HashMap@2f689685, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("IdentityHashMap", java.util.IdentityHashMap@49bd7a94, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("LinkedHashMap", java.util.LinkedHashMap@32615675, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("WeakHashMap", java.util.WeakHashMap@14b67218, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@4499f160, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@3b01304f, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@529ad501, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("EnumMap", java.util.EnumMap@798929d8, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("TreeMap", java.util.TreeMap@3d119d1c, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@10feca3, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@324d3532, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@1ad944f1, ABSENT, NEWVALUE, UNUSED, NEWVALUE, NEWVALUE): success
test Defaults.testMerge("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@19ed58a4, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("HashMap", java.util.HashMap@3f48e3eb, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@2070c4f6, OLDVALUE, NEWVALUE, NULL, ABSENT, NULL): success
test Defaults.testMerge("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@2c3f99e7, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMerge("HashMap", java.util.HashMap@35128a5f, OLDVALUE, NEWVALUE, RESULT, RESULT, RESULT): success
test Defaults.testMergeNullMerger("Hashtable", java.util.Hashtable@75574f11): success
test Defaults.testMergeNullMerger("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@2c7a691d): success
test Defaults.testMergeNullMerger("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@7b8045e6): success
test Defaults.testMergeNullMerger("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@2d17fa7f): success
test Defaults.testMergeNullMerger("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@78358460): success
test Defaults.testMergeNullMerger("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@2fe3770b): success
test Defaults.testMergeNullMerger("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@4f356299): success
test Defaults.testMergeNullMerger("HashMap", java.util.HashMap@194ab636): success
test Defaults.testMergeNullMerger("IdentityHashMap", java.util.IdentityHashMap@53973a8c): success
test Defaults.testMergeNullMerger("LinkedHashMap", java.util.LinkedHashMap@96e7dff): success
test Defaults.testMergeNullMerger("WeakHashMap", java.util.WeakHashMap@485377c4): success
test Defaults.testMergeNullMerger("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@79511bf8): success
test Defaults.testMergeNullMerger("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@287c888b): success
test Defaults.testMergeNullMerger("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@a85a588): success
test Defaults.testMergeNullMerger("HashMap", java.util.HashMap@2c325446): success
test Defaults.testMergeNullMerger("IdentityHashMap", java.util.IdentityHashMap@279456b5): success
test Defaults.testMergeNullMerger("LinkedHashMap", java.util.LinkedHashMap@4c297628): success
test Defaults.testMergeNullMerger("WeakHashMap", java.util.WeakHashMap@19113d69): success
test Defaults.testMergeNullMerger("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@50a5a334): success
test Defaults.testMergeNullMerger("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@7344c33c): success
test Defaults.testMergeNullMerger("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@9868749): success
test Defaults.testMergeNullMerger("EnumMap", java.util.EnumMap@4d33bf5c): success
test Defaults.testMergeNullMerger("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@3d8f338d): success
test Defaults.testMergeNullMerger("TreeMap", java.util.TreeMap@36df6998): success
test Defaults.testMergeNullMerger("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@2b797675): success
test Defaults.testPutIfAbsent("Hashtable", java.util.Hashtable@1ce7dbe3): success
test Defaults.testPutIfAbsent("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@2a4c110d): success
test Defaults.testPutIfAbsent("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@448443bb): success
test Defaults.testPutIfAbsent("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@5afa376e): success
test Defaults.testPutIfAbsent("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@60b62048): success
test Defaults.testPutIfAbsent("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@60610e2a): success
test Defaults.testPutIfAbsent("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@2beaa261): success
test Defaults.testPutIfAbsent("HashMap", java.util.HashMap@385318e4): success
test Defaults.testPutIfAbsent("IdentityHashMap", java.util.IdentityHashMap@5bd13d75): success
test Defaults.testPutIfAbsent("WeakHashMap", java.util.WeakHashMap@1aec374e): success
test Defaults.testPutIfAbsent("LinkedHashMap", java.util.LinkedHashMap@6e0246d6): success
test Defaults.testPutIfAbsent("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@5ddad1d8): success
test Defaults.testPutIfAbsent("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@2f3f4ced): success
test Defaults.testPutIfAbsent("IdentityHashMap", java.util.IdentityHashMap@1e5a2382): success
test Defaults.testPutIfAbsent("LinkedHashMap", java.util.LinkedHashMap@4f10b3a2): success
test Defaults.testPutIfAbsent("WeakHashMap", java.util.WeakHashMap@7591c8bf): success
test Defaults.testPutIfAbsent("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@4b5e080b): success
test Defaults.testPutIfAbsent("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@4f446b6d): success
test Defaults.testPutIfAbsent("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@3c817aed): success
test Defaults.testPutIfAbsent("EnumMap", java.util.EnumMap@383aba94): success
test Defaults.testPutIfAbsent("TreeMap", java.util.TreeMap@29fb5859): success
test Defaults.testPutIfAbsent("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@5dcbb1b6): success
test Defaults.testPutIfAbsent("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@602e5778): success
test Defaults.testPutIfAbsent("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@2b3c2e8f): success
test Defaults.testPutIfAbsent("HashMap", java.util.HashMap@6c4da9d1): success
test Defaults.testPutIfAbsentNulls("HashMap", java.util.HashMap@3450f616): success
test Defaults.testPutIfAbsentNulls("IdentityHashMap", java.util.IdentityHashMap@70227457): success
test Defaults.testPutIfAbsentNulls("LinkedHashMap", java.util.LinkedHashMap@2784c3e5): success
test Defaults.testPutIfAbsentNulls("WeakHashMap", java.util.WeakHashMap@4a5696aa): success
test Defaults.testPutIfAbsentNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@7a5a1f54): success
test Defaults.testPutIfAbsentNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@17dc4df): success
test Defaults.testPutIfAbsentNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@d656f91): success
test Defaults.testRemove("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@5aa200f4): success
test Defaults.testRemove("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@72812d21): success
test Defaults.testRemove("Hashtable", java.util.Hashtable@75185420): success
test Defaults.testRemove("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@35da4d16): success
test Defaults.testRemove("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@622433ce): success
test Defaults.testRemove("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@4d36b495): success
test Defaults.testRemove("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@5302245d): success
test Defaults.testRemove("HashMap", java.util.HashMap@45b848ee): success
test Defaults.testRemove("IdentityHashMap", java.util.IdentityHashMap@443f093c): success
test Defaults.testRemove("LinkedHashMap", java.util.LinkedHashMap@744d6fe8): success
test Defaults.testRemove("WeakHashMap", java.util.WeakHashMap@357065d3): success
test Defaults.testRemove("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@40f57d1): success
test Defaults.testRemove("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@555f9a9c): success
test Defaults.testRemove("HashMap", java.util.HashMap@43b9b982): success
test Defaults.testRemove("LinkedHashMap", java.util.LinkedHashMap@dc97949): success
test Defaults.testRemove("WeakHashMap", java.util.WeakHashMap@264cbf53): success
test Defaults.testRemove("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@16cdd512): success
test Defaults.testRemove("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@56f92e29): success
test Defaults.testRemove("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@12aed26e): success
test Defaults.testRemove("TreeMap", java.util.TreeMap@7317f6b7): success
test Defaults.testRemove("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@16e02c79): success
test Defaults.testRemove("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@4657ab87): success
test Defaults.testRemove("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@1b9f0acf): success
test Defaults.testRemove("IdentityHashMap", java.util.IdentityHashMap@2270c505): success
test Defaults.testRemove("EnumMap", java.util.EnumMap@3910da4e): success
test Defaults.testRemoveNulls("HashMap", java.util.HashMap@69f517d6): success
test Defaults.testRemoveNulls("IdentityHashMap", java.util.IdentityHashMap@3280535): success
test Defaults.testRemoveNulls("LinkedHashMap", java.util.LinkedHashMap@465adf5f): success
test Defaults.testRemoveNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@27a17f90): success
test Defaults.testRemoveNulls("WeakHashMap", java.util.WeakHashMap@56e52f3a): success
test Defaults.testRemoveNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@1dbd119b): success
test Defaults.testRemoveNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@cd3df32): success
test Defaults.testReplaceAll("Hashtable", java.util.Hashtable@653a6cfe): success
test Defaults.testReplaceAll("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@185d5641): success
test Defaults.testReplaceAll("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@507c20a5): success
test Defaults.testReplaceAll("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@3753b7b7): success
test Defaults.testReplaceAll("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@d10de79): success
test Defaults.testReplaceAll("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@44eb4356): success
test Defaults.testReplaceAll("HashMap", java.util.HashMap@323d4897): success
test Defaults.testReplaceAll("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@4798f26): success
test Defaults.testReplaceAll("HashMap", java.util.HashMap@766ebd8c): success
test Defaults.testReplaceAll("LinkedHashMap", java.util.LinkedHashMap@47d24a48): success
test Defaults.testReplaceAll("LinkedHashMap", java.util.LinkedHashMap@34cb0377): success
test Defaults.testReplaceAll("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@75f6094c): success
test Defaults.testReplaceAll("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@44497dbc): success
test Defaults.testReplaceAll("IdentityHashMap", java.util.IdentityHashMap@337bbb33): success
test Defaults.testReplaceAll("TreeMap", java.util.TreeMap@15d9f603): success
test Defaults.testReplaceAll("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@7246b108): success
test Defaults.testReplaceAll("IdentityHashMap", java.util.IdentityHashMap@4c2dd442): success
test Defaults.testReplaceAll("WeakHashMap", java.util.WeakHashMap@69f2ba43): success
test Defaults.testReplaceAll("WeakHashMap", java.util.WeakHashMap@164142c3): success
test Defaults.testReplaceAll("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@616673ea): success
test Defaults.testReplaceAll("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@5d6496d): success
test Defaults.testReplaceAll("EnumMap", java.util.EnumMap@730042ac): success
test Defaults.testReplaceAll("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@1a1c52a2): success
test Defaults.testReplaceAll("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@35b70dd9): success
test Defaults.testReplaceAll("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@4efd4f88): success
test Defaults.testReplaceAllNoNullReplacement("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@5679e5c0): success
test Defaults.testReplaceAllNoNullReplacement("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@49a0d526): success
test Defaults.testReplaceAllNoNullReplacement("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@137b0b1e): success
test Defaults.testReplaceAllNoNullReplacement("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@ba3f124): success
test Defaults.testReplaceAllNoNullReplacement("Hashtable", java.util.Hashtable@761549f0): success
test Defaults.testReplaceAllNoNullReplacement("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@43ca7c50): success
test Defaults.testReplaceAllNoNullReplacement("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@1da7a6ac): success
test Defaults.testReplaceKV("Hashtable", java.util.Hashtable@5cb9b2d8): success
test Defaults.testReplaceKV("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@292712d3): success
test Defaults.testReplaceKV("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@47117ce6): success
test Defaults.testReplaceKV("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@322de846): success
test Defaults.testReplaceKV("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@528b39f4): success
test Defaults.testReplaceKV("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@73d90034): success
test Defaults.testReplaceKV("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@f983fa7): success
test Defaults.testReplaceKV("HashMap", java.util.HashMap@64336cce): success
test Defaults.testReplaceKV("IdentityHashMap", java.util.IdentityHashMap@4367828c): success
test Defaults.testReplaceKV("WeakHashMap", java.util.WeakHashMap@1d84b8e3): success
test Defaults.testReplaceKV("LinkedHashMap", java.util.LinkedHashMap@5e979f24): success
test Defaults.testReplaceKV("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@2c53c6cd): success
test Defaults.testReplaceKV("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@1faa951f): success
test Defaults.testReplaceKV("HashMap", java.util.HashMap@2e7fcf3a): success
test Defaults.testReplaceKV("LinkedHashMap", java.util.LinkedHashMap@7f856a50): success
test Defaults.testReplaceKV("WeakHashMap", java.util.WeakHashMap@7b4dccb6): success
test Defaults.testReplaceKV("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@7bcb716c): success
test Defaults.testReplaceKV("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@1b1f773b): success
test Defaults.testReplaceKV("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@56931b75): success
test Defaults.testReplaceKV("EnumMap", java.util.EnumMap@297928ab): success
test Defaults.testReplaceKV("TreeMap", java.util.TreeMap@62c76dd): success
test Defaults.testReplaceKV("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@bc6ef48): success
test Defaults.testReplaceKV("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@7dab47ac): success
test Defaults.testReplaceKV("IdentityHashMap", java.util.IdentityHashMap@681a18e8): success
test Defaults.testReplaceKV("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@37e0b39e): success
test Defaults.testReplaceKVNoNulls("Hashtable", java.util.Hashtable@5bec8e60): success
test Defaults.testReplaceKVNoNulls("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@709c3371): success
test Defaults.testReplaceKVNoNulls("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@6dae52d8): success
test Defaults.testReplaceKVNoNulls("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@5a5f8e05): success
test Defaults.testReplaceKVNoNulls("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@d0b3254): success
test Defaults.testReplaceKVNoNulls("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@2d08d6fb): success
test Defaults.testReplaceKVNoNulls("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@582b658c): success
test Defaults.testReplaceKVNulls("HashMap", java.util.HashMap@37cbf697): success
test Defaults.testReplaceKVNulls("IdentityHashMap", java.util.IdentityHashMap@57db6cbb): success
test Defaults.testReplaceKVNulls("LinkedHashMap", java.util.LinkedHashMap@755c1c5e): success
test Defaults.testReplaceKVNulls("WeakHashMap", java.util.WeakHashMap@6ba5a356): success
test Defaults.testReplaceKVNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@2f1f0161): success
test Defaults.testReplaceKVNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@6ba53656): success
test Defaults.testReplaceKVNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@74388130): success
test Defaults.testReplaceKVV("Hashtable", java.util.Hashtable@75c9b1e1): success
test Defaults.testReplaceKVV("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@25da6591): success
test Defaults.testReplaceKVV("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@7d95d804): success
test Defaults.testReplaceKVV("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@422faf1e): success
test Defaults.testReplaceKVV("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@6ee5d6eb): success
test Defaults.testReplaceKVV("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@4e94ec0b): success
test Defaults.testReplaceKVV("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@5f6f0ca8): success
test Defaults.testReplaceKVV("HashMap", java.util.HashMap@22f937e7): success
test Defaults.testReplaceKVV("IdentityHashMap", java.util.IdentityHashMap@708dffc5): success
test Defaults.testReplaceKVV("LinkedHashMap", java.util.LinkedHashMap@65ff9a48): success
test Defaults.testReplaceKVV("WeakHashMap", java.util.WeakHashMap@24c29073): success
test Defaults.testReplaceKVV("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@15ac1124): success
test Defaults.testReplaceKVV("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@44ed6f3c): success
test Defaults.testReplaceKVV("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@7ad70c2e): success
test Defaults.testReplaceKVV("HashMap", java.util.HashMap@40a3d778): success
test Defaults.testReplaceKVV("IdentityHashMap", java.util.IdentityHashMap@35a913cf): success
test Defaults.testReplaceKVV("LinkedHashMap", java.util.LinkedHashMap@42d719ae): success
test Defaults.testReplaceKVV("WeakHashMap", java.util.WeakHashMap@26e2d734): success
test Defaults.testReplaceKVV("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@48ad00b8): success
test Defaults.testReplaceKVV("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@67f6a850): success
test Defaults.testReplaceKVV("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@1e43eaec): success
test Defaults.testReplaceKVV("EnumMap", java.util.EnumMap@34f4bbda): success
test Defaults.testReplaceKVV("TreeMap", java.util.TreeMap@77740510): success
test Defaults.testReplaceKVV("ExtendsAbstractMap(TreeMap)", Defaults$ExtendsAbstractMap@50a8c92): success
test Defaults.testReplaceKVV("Collections.synchronizedMap(EnumMap)", java.util.Collections$SynchronizedMap@14621b16): success
test Defaults.testReplaceKVVNoNulls("ConcurrentHashMap", java.util.concurrent.ConcurrentHashMap@720766b9): success
test Defaults.testReplaceKVVNoNulls("Hashtable", java.util.Hashtable@695acea5): success
test Defaults.testReplaceKVVNoNulls("ConcurrentSkipListMap", java.util.concurrent.ConcurrentSkipListMap@5bd5744c): success
test Defaults.testReplaceKVVNoNulls("Collections.synchronizedMap(ConcurrentHashMap)", java.util.Collections$SynchronizedMap@9aa064a): success
test Defaults.testReplaceKVVNoNulls("Collections.checkedMap(ConcurrentHashMap)", java.util.Collections$CheckedMap@d51bcf4): success
test Defaults.testReplaceKVVNoNulls("ExtendsAbstractMap(ConcurrentHashMap)", Defaults$ExtendsAbstractMap@5e61b0f0): success
test Defaults.testReplaceKVVNoNulls("ImplementsConcurrentMap", Defaults$ImplementsConcurrentMap@6b254caf): success
test Defaults.testReplaceKVVNulls("HashMap", java.util.HashMap@4dd18dbc): success
test Defaults.testReplaceKVVNulls("IdentityHashMap", java.util.IdentityHashMap@4d90740a): success
test Defaults.testReplaceKVVNulls("LinkedHashMap", java.util.LinkedHashMap@3d72febb): success
test Defaults.testReplaceKVVNulls("WeakHashMap", java.util.WeakHashMap@1ddc2d54): success
test Defaults.testReplaceKVVNulls("Collections.checkedMap(HashMap)", java.util.Collections$CheckedMap@63a4cec7): success
test Defaults.testReplaceKVVNulls("Collections.synchronizedMap(HashMap)", java.util.Collections$SynchronizedMap@6e76a97f): success
test Defaults.testReplaceKVVNulls("ExtendsAbstractMap", Defaults$ExtendsAbstractMap@17fbdf25): success

===============================================
java/util/Map/Defaults.java
Total tests run: 512, Passes: 512, Failures: 0, Skips: 0
===============================================

----------System.err:(3/35)----------

JavaTest Message: Test complete.

result: Passed. Execution successful


test result: Passed. Execution successful
